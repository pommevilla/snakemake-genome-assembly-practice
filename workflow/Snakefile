configfile: "config/config.yml"
include: "rules/common.smk"
include: "rules/download_sras.smk"
include: "rules/assembly.smk"
include: "rules/metrics.smk"

localrules: all, generate_snakemake_dag, clean_all, download_sra, dump_fastqs, fastp_qc, collect_quast_metrics, collect_genomes

####### Target rules #######
rule all:
    input:
        # Workflow diagram
        "snakemake_dag.png",

        # Assembled genomes
        # expand(
        #     "{spades_output_dir}/{sra}/spades_output/scaffolds.fasta", 
        #     spades_output_dir=config["directories"]['working_directory'],
        #     sra=SRA_LIST
        # ),
        expand(
            "{unicycler_output_directory}/{sra}/unicycler_output/assembly.fasta", 
            unicycler_output_directory=config["directories"]['working_directory'],
            sra=SRA_LIST
        ),
        # Assembled genomes in the final directory
        expand(
            "{final_genome_directory}/{sra}_assembly.fasta",
            final_genome_directory=config["directories"]['final_genome_directory'],
            sra=SRA_LIST
        ),
        # Quast metrics
        f"{config['directories']['final_metrics_directory']}/quast_metrics.txt",
        # CheckM metrics
        expand(
            "{final_metrics_directory}/checkm2",
            final_metrics_directory=config["directories"]['final_metrics_directory'],
        )

####### Meta rules #######
rule generate_snakemake_dag:
    output:
        "snakemake_dag.png"
    log:
        err="logs/snakemake_dag.err",
        out="logs/snakemake_dag.out"
    shell:
        "snakemake --rulegraph | dot -Tpng > {output}"

rule clean_all:
    log:
        err="logs/clean_all.err",
        out="logs/clean_all.out"
    params:
        working_directory=config["directories"]["working_directory"]
    shell:
        """
        echo "Removing all logs..."
        rm -rf logs/*
        rm -rf .snakemake/log

        echo "Removing locks..."
        rm .snakemake/locks/*
        """


